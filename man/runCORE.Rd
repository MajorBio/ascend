% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ascend_clustering.R
\docType{methods}
\name{runCORE}
\alias{runCORE}
\alias{runCORE,EMSet-method}
\title{runCORE}
\usage{
runCORE(object, ..., conservative, nres, remove.outliers)

\S4method{runCORE}{EMSet}(object, conservative = TRUE, dims = 20,
  nres = 40, remove.outliers = FALSE)
}
\arguments{
\item{object}{An EMSet object that has undergone PCA reduction.}

\item{...}{...}

\item{conservative}{Use conservative (more stable) clustering result
(TRUE or FALSE). Default: TRUE.}

\item{nres}{Number of resolutions to test, ranging from 20 to 100. Default: 40.}

\item{remove.outliers}{Remove cells that weren't assigned a cluster with
dynamicTreeCut. This is indicative of outlier cells within the sample.
Default: FALSE.}

\item{dims}{Number of PC components to use in distance matrix generation. Default: 20}
}
\value{
An \code{\linkS4class{EMSet}} with cluster information loaded into 
the clusterAnalysis and colInfo slots
}
\description{
This function determines the optimal number of clusters for a dataset.
This function first generates a distance matrix and a hclust object, and then
cuts the tree at different heights.
}
\details{
This will return an EMSet with the following objects:
\describe{
    \item{DistanceMatrix}{A distance matrix.}
    \item{Hclust}{A hclust object.}
    \item{PutativeClusters}{Cluster identities generated by dynamicTreeCut.}
    \item{ClusteringMatrix}{A matrix containing a cluster identities from cutting at 40 different heights.}
    \item{Clusters}{Optimum cluster identities for each cell.}
    \item{NumberOfClusters}{Number of clusters.}
    \item{OptimalTreeHeight}{Optimal tree height used to generate cluster identities.}
    \item{KeyStats}{A dataframe containing information on each generated clustering result, that is used to determine the optimal cluster number.}
}
}
\examples{
# Load example EMSet
em_set <- ascend::analyzed_set

# Run CORE with default parameters
em_set <- runCORE(em_set, conservative = TRUE,
dims = 20, nres = 40, remove.outliers = TRUE)

}
